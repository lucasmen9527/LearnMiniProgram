<!--pages/wxml/wxml.wxml-->
<!-- 1.wxml的格式 -->
<!-- <view></view>
<image/> -->

<!-- 2.属性区分大小写 -->
<view></view>

<!-- 3.Mustache -->
<view>{{message}}</view>
<view>{{firstName}} {{lastName}}</view>
<view>{{firstName + ' ' + lastName}}</view>
<view>{{age>=18 ? '大人' :'小孩子'}}</view>

<!-- 显示当前的时间 -->
<view>{{date}}</view>

<button size="mini" bindtap="handleSwitchColor" class="box">切换颜色</button>
<view class="box {{isActive?'active':''}}">哈哈哈</view>

<!-- <map class longitude="116.11" latitude="39.6"></map> -->

<view>-------------条件判断----------------</view>
<!-- wx:if的使用 -->
<button bindtap="handleSwitchShow" size="mini">切换显示</button>
<view wx:if="{{isShow}}">哈哈哈</view>
<!-- wx:elif/wx:else -->
<button bindtap="handleIncrement">分数递增5</button>
<view wx:if="{{score>=90}}">优秀</view>
<view wx:elif="{{score>=80}}">良好</view>
<view wx:elif="{{score>=60}}">及格</view>
<view wx:else>不及格</view>

<!-- hidden属性 display none-->
<view hidden>我是hidden属性控制的内容</view>

<!-- wx:if和hidden在隐藏组件时有什么区别 -->
<!-- 
区别:
  hidden:隐藏组件 组件依然存在 display为none
  wx:if: 隐藏组件不渲染组件
应用:
  如果显示和隐藏切换的频率非常高,使用hidden
  显示和隐藏切换频率低,使用wx:if
 -->
<view>---------</view>
<view hidden="{{true}}">我是通过hidden控制的内容</view>
<view wx:if="{{false}}">我是通过wx:if控制的内容</view>

<view>-------------列表渲染----------------</view>
<!-- 1.wx:for的基础 -->
<!-- 1.1遍历数组/字符串/数字 -->
<!-- <view wx:for="{{['a','b','c','d']}}">{{item}}--{{index}}</view>
<view wx:for="menfutong">{{item}}--{{index}}</view>
<view wx:for="{{9}}">{{item}}</view> -->

<!-- 2.block标签  -->
<!-- 
  并不是一个组件,仅仅是一个包装元素,不会在页面中做任何渲染,只接受控制属性
 -->
<!-- <block wx:if="{{true}}">
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我是内容</text>
</block>

<block wx:for="{{3}}">
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我是内容</text>
</block> -->

<!-- 3.item、index起别名 -->
<!-- <view wx:for="{{movies}}" wx:for-item="movie">{{movie}}</view>
<view wx:for="{{movies}}" wx:for-index="i">{{i}}</view>

<block wx:for="{{nums}}" wx:for-item="num">
  <view wx:for="{{num}}">{{item}}</view>
</block> -->

<!-- 4.key的作用 -->
<!-- 如果用index 仅仅是消除警告 -->
<view class="container">
  <view wx:for="{{letters}}" wx:key="{{item}}">{{item}}</view>
</view>

<view>-------------template----------------</view>
<!-- 
  之前的时候小程序是不支持自定义组件的,为了进行代码的复用 使用template
 -->
<!-- 模板中包裹的内容,在没有被使用前,是不会进行任何渲染的 -->
<!-- <template name="contentTemplate">
  <button size="mini">{{btnText}}</button>
  <view>{{content}}</view>
</template> -->

<!-- 结论:include不能导入模板 include可以将目标文件中除了 template wxs 外的整个代码引入 -->
<!-- 
关于wxml的导入有2种方式
  import导入
    1.主要是导入template
    2.特点:不能递归导入
  include引入:
    1.将公共的wxml中的组件抽取到一个文件中
    2.特点:不能导入template/wxs ,可以进行递归导入

 -->
<!-- <include src="/wxml/template.wxml"/> -->
<import src="/wxml/template.wxml"/>
<import src="/wxml/abc.wxml"/>
<template is="contentTemplate" data="{{btnText:'按钮',content:'哈哈哈'}}" />
<template is="contentTemplate" data="{{btnText:'警告',content:'呵呵呵'}}" />
<template is="contentTemplate" data="{{btnText:'高潮',content:'啊啊啊'}}" />

<template is="abc" />


